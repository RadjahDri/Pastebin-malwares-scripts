<xml><title>Untitled_1497773220899</title><id>/JmKWVa6A<author>a guest </author><date>Jun 18th, 2017</date><content>; Exibe com opção de desinfectar pen drive / unidade
; Code: busTer :)
; made publ!c @ 29/09/2010





;#include <Array.au3>
$drive = DriveGetDrive( "removable")
if  @error then
	MsgBox(64, "Insuficient Drives", "Insert at least One Removable Media")
	Exit
Endif
if $drive[1] = "a:" then
	$dsk = 2
Else
	$dsk = 1
endif
$fix =  DriveGetDrive( "fixed")
Global $inf = 0
Global $infd = 0
#NoTrayIcon
#include <GUIConstants.au3>
#include <WindowsConstants.au3>
;#include <GUIComboBox.au3>
;#include <GuiConstantsEx.au3>
#include <EditConstants.au3>
;#include <GUIListbox.au3>
#include <GUIListView.au3>
;#include <Misc.au3>
;#Include <String.au3>
;#Include <GuiButton.au3>
;#Include <File.au3>
ToolTip("CodeD by busTer", 10, 10, "Metralha Team 2009")
;###############################################################################################

if not @error Then
	
	msgbox(64, "Detection!", int($drive[0]+$fix[0])& "  Drives detected!"&@CRLF&" Cleaning")
for $i = $dsk to ($drive[0])
if FileExists($drive[$i]&"\autorun.inf") then
	$inf = $inf + 1
	
	
FileSetAttrib($drive[$i]&"\*.inf", "-ARSHNOT")
FileSetAttrib($drive[$i]&"\*.exe", "-ARSHNOT")
FileSetAttrib($drive[$i]&"\*.com", "-ARSHNOT")
FileSetAttrib($drive[$i]&"\*.bat", "-ARSHNOT")
FileSetAttrib($drive[$i]&"\NTDETECT.COM", "+ARSH")
FileSetAttrib($drive[$i]&"\*.cmd", "-ARSHNOT")
	FileDelete($drive[$i]&"\autorun.inf")
	DirCreate($drive[$i]&"\autorun.inf")
	$file = FileOpen($drive[$i]&"\autorun.inf\Protected.txt", 2)
	FileWrite($file, "Drive protected, Metralha Team 2009")
	FileClose($file)
Else
	$inf = $inf + 1
	DirCreate($drive[$i]&"\autorun.inf")
	$file = FileOpen($drive[$i]&"\autorun.inf\Protected.txt", 2)
	FileWrite($file, "Drive protected, Metralha Team 2009")
	FileClose($file)
EndIf
Next
msgbox(64, "Status", $inf & "  Removable Drives cleaned!")
For $y = 1 to $fix[0]
	if FileExists($fix[$y]&"\autorun.inf") then
		$infd = $infd + 1
FileSetAttrib($fix[$y]&"\*.inf", "-ARSHNOT")
FileSetAttrib($fix[$y]&"\*.exe", "-ARSHNOT")
FileSetAttrib($fix[$y]&"\*.com", "-ARSHNOT")
FileSetAttrib($fix[$y]&"\*.bat", "-ARSHNOT")
FileSetAttrib($fix[$y]&"\NTDETECT.COM", "+ARSH")
FileSetAttrib($fix[$y]&"\*.cmd", "-ARSHNOT")
	FileDelete($fix[$y]&"\autorun.inf")
	DirCreate($fix[$y]&"\autorun.inf")
	$file = FileOpen($fix[$y]&"\autorun.inf\Protected.txt", 2)
	FileWrite($file, "Drive protected, Metralha Team 2009")
	FileClose($file)
Else
	$infd = $infd + 1
	DirCreate($fix[$y]&"\autorun.inf")
	$file = FileOpen($fix[$y]&"\autorun.inf\Protected.txt", 2)
	FileWrite($file, "Drive protected, Metralha Team 2009")
	FileClose($file)
EndIf
next
msgbox(64, "Status", $infd & "  Fixed Drives cleaned!")
	EndIf
msgbox(64, "Status", "Cleaning Win32 PE files")
 
 
	$gui = GUICreate("WIN32 PE Files", 600, 700, Default, Default)
	GUISetState(@SW_SHOW)
	$edit = GUICtrlCreateEdit("Select the files you want to delete above. A directory will be created to prevent overwrite."&@CRLF&@CRLF&"No confirmation needed, so be careful."&@CRLF&@CRLF&"coded by busTer"&@CRLF&@CRLF&"Metralha Team 2009", 10, 360, 550, 300, $ES_READONLY)
	$listL = GUICtrlCreateListView("", 10,30, 550,300, $LVS_EX_CHECKBOXES)
	_GUICtrlListView_InsertColumn($listL,1 , "Executable Path/Name", 310)
	_GUICtrlListView_InsertColumn($listL,1 , "Status", 310)
	$menu = GUICtrlCreateContextMenu($listL)
	$sub1 = GUICtrlCreateMenuItem("Delete Selected", $menu)
 
for $i = 1 to $fix[0]
$search = FileFindFirstFile($fix[$i]&"\*.exe")
; Check if the search was successful

While 1
    $file = FileFindNextFile($search) 
    If @error Then ExitLoop
 #cs   
  $df =  MsgBox(68, "Confirm", "Delete file "&$fix[$i]&"\"& $file& "?")
	if $df = 6 then 
		FileSetAttrib($fix[$i]&"\"& $file, "-ARSHNOT")
		FileDelete($fix[$i]&"\"& $file)
		DirCreate($fix[$i]&"\"& $file)
	EndIf
	#ce
	$size =	FileGetSize($fix[$i]&"\"& $file)
	if $size <> 0 then 
		GUICtrlCreateListViewItem($fix[$i]&"\"& $file&"|POSSIBLY INFECTED" , $ListL)
	Else
		GUICtrlCreateListViewItem($fix[$i]&"\"& $file&"|HEALED" , $ListL)
		EndIf
WEnd
	

; Close the search handle
FileClose($search)
Next	


for $i = $dsk to $drive[0]
	
	
$search = FileFindFirstFile($drive[$i]&"\*.exe")
; Check if the search was successful

While 1
	
	;___________________________________________

	
	
	
	
	
    $file = FileFindNextFile($search) 
    If @error Then ExitLoop
		
	$size =	FileGetSize($drive[$i]&"\"& $file)
	if $size <> 0 then 
		GUICtrlCreateListViewItem($drive[$i]&"\"& $file &"|POSSIBLY INFECTED" , $ListL)
	Else
				GUICtrlCreateListViewItem($drive[$i]&"\"& $file &"|HEALED" , $ListL)
EndIf
#cs    
  $df =  MsgBox(68, "Confirm", "Delete file "&$drive[$i]&"\"& $file& "?")
	if $df = 6 then 
		FileSetAttrib($drive[$i]&"\"& $file, "-ARSHNOT")
		FileDelete($drive[$i]&"\"& $file)
		DirCreate($drive[$i]&"\"& $file)
	EndIf
	#ce
WEnd

; Close the search handle
FileClose($search)
Next








;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
for $i = 1 to $fix[0]
$search = FileFindFirstFile($fix[$i]&"\*.com")
; Check if the search was successful

While 1
    $file = FileFindNextFile($search) 
    If @error Then ExitLoop
 #cs   
  $df =  MsgBox(68, "Confirm", "Delete file "&$fix[$i]&"\"& $file& "?")
	if $df = 6 then 
		FileSetAttrib($fix[$i]&"\"& $file, "-ARSHNOT")
		FileDelete($fix[$i]&"\"& $file)
		DirCreate($fix[$i]&"\"& $file)
	EndIf
	#ce
	$size =	FileGetSize($fix[$i]&"\"& $file)
	if $size <> 0 then 
		if $file <> "NTDETECT.COM" then
		GUICtrlCreateListViewItem($fix[$i]&"\"& $file &"|POSSIBLY INFECTED" , $ListL)
	EndIf
EndIf
WEnd

; Close the search handle
FileClose($search)
Next	


for $i = $dsk to $drive[0]
	
	
$search = FileFindFirstFile($drive[$i]&"\*.com")
; Check if the search was successful

While 1
	
	;___________________________________________

	
	
	
	
	
    $file = FileFindNextFile($search) 
    If @error Then ExitLoop
		
	$size =	FileGetSize($drive[$i]&"\"& $file)
	if $size <> 0 then 
		if $file <> "NTDETECT.COM" then
		GUICtrlCreateListViewItem($drive[$i]&"\"& $file &"|POSSIBLY INFECTED" , $ListL)

EndIf
	Else
		GUICtrlCreateListViewItem($drive[$i]&"\"& $file &"|HEALED" , $ListL)
	EndIf
#cs    
  $df =  MsgBox(68, "Confirm", "Delete file "&$drive[$i]&"\"& $file& "?")
	if $df = 6 then 
		FileSetAttrib($drive[$i]&"\"& $file, "-ARSHNOT")
		FileDelete($drive[$i]&"\"& $file)
		DirCreate($drive[$i]&"\"& $file)
	EndIf
	#ce
WEnd

; Close the search handle
FileClose($search)
Next
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

for $i = 1 to $fix[0]
$search = FileFindFirstFile($fix[$i]&"\*.cmd")
; Check if the search was successful

While 1
    $file = FileFindNextFile($search) 
    If @error Then ExitLoop
 #cs   
  $df =  MsgBox(68, "Confirm", "Delete file "&$fix[$i]&"\"& $file& "?")
	if $df = 6 then 
		FileSetAttrib($fix[$i]&"\"& $file, "-ARSHNOT")
		FileDelete($fix[$i]&"\"& $file)
		DirCreate($fix[$i]&"\"& $file)
	EndIf
	#ce
	$size =	FileGetSize($fix[$i]&"\"& $file)
	if $size <> 0 then 
		GUICtrlCreateListViewItem($fix[$i]&"\"& $file &"|POSSIBLY INFECTED" , $ListL)
	Else
		GUICtrlCreateListViewItem($fix[$i]&"\"& $file &"|HEALED" , $ListL)
EndIf
WEnd

; Close the search handle
FileClose($search)
Next	


for $i = $dsk to $drive[0]
	
	
$search = FileFindFirstFile($drive[$i]&"\*.cmd")
; Check if the search was successful

While 1
	
	;___________________________________________

	
	
	
	
	
    $file = FileFindNextFile($search) 
    If @error Then ExitLoop
		
	$size =	FileGetSize($drive[$i]&"\"& $file)
	if $size <> 0 then 
		GUICtrlCreateListViewItem($drive[$i]&"\"& $file &"|POSSIBLY INFECTED" , $ListL)
	Else
		GUICtrlCreateListViewItem($drive[$i]&"\"& $file &"|HEALED" , $ListL)
		Endif
#cs    
  $df =  MsgBox(68, "Confirm", "Delete file "&$drive[$i]&"\"& $file& "?")
	if $df = 6 then 
		FileSetAttrib($drive[$i]&"\"& $file, "-ARSHNOT")
		FileDelete($drive[$i]&"\"& $file)
		DirCreate($drive[$i]&"\"& $file)
	EndIf
	#ce
WEnd

; Close the search handle
FileClose($search)
Next
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;










while 1
	$nMsg = GUIGetMsg()
	Switch $nMsg
	Case $GUI_EVENT_CLOSE
		
		
		
Exitloop

Case $sub1
	delete()
	
	EndSwitch



WEnd
msgbox(31, "Status", "Cleaning Complete !")
Func delete()
	
	
	$del = GUICtrlRead($listL)
	select
		
	case $del <> 0

	$msgs = GUICtrlRead(GUICtrlRead($listL))
	$array = StringSplit($msgs, "|")
	if $array[2] <> "DELETED" then
		if $array[2] <> "HEALED" then
			
		FileSetAttrib($array[1], "-ARSHNOT")
		FileDelete($array[1])
		DirCreate($array[1])
		FileSetAttrib($array[1], "+H", 1)
	GUICtrlSetData(GUICtrlRead($ListL), $array[1]&"|DELETED")
Else
	MsgBox(64, "Error", "File is already healed")
EndIf
endIf
	EndSelect
	EndFunc</content></xml>